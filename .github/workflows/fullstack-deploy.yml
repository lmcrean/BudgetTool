name: Deploy Full-Stack App to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.x'
  NODE_VERSION: '20.x'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install --legacy-peer-deps
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-app
        path: frontend/dist
      
    - name: Restore NuGet packages
      run: dotnet restore
    
    - name: Build Backend
      run: dotnet build --configuration Release --no-restore
    
    - name: Publish Backend
      run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/backend" --no-build

    - name: Upload backend artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-app
        path: ${{env.DOTNET_ROOT}}/backend

  deploy-backend:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-backend.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4A72AE0249ED4026BC6AE1953F51C3CF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_84747220A89A4ABA929882948E7DD949 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_25ADDA71426C444CBCB32D8CCFB743A8 }}

      - name: Deploy Backend to Azure
        id: deploy-backend
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'budget-tool-backend'
          slot-name: 'Production'
          package: .

  deploy-frontend:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-frontend.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_4A72AE0249ED4026BC6AE1953F51C3CF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_84747220A89A4ABA929882948E7DD949 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_25ADDA71426C444CBCB32D8CCFB743A8 }}

      - name: Deploy Frontend to Azure
        id: deploy-frontend
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'budget-tool-frontend'
          slot-name: 'Production'
          package: . 