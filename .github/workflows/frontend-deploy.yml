name: Deploy Frontend to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'Frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: 'budget-tool-frontend'
  AZURE_RESOURCE_GROUP: 'budget-tool-frontend_group'
  AZURE_SUBSCRIPTION_ID: 'aa57f162-6844-4d68-af99-9b89e78d2bdd'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './Frontend/package-lock.json'

    - name: Install Frontend Dependencies
      working-directory: ./Frontend
      run: npm install --legacy-peer-deps
    
    - name: Build Frontend
      working-directory: ./Frontend
      run: npm run build

    - name: Copy web.config to dist
      working-directory: ./Frontend
      run: Copy-Item web.config dist/

    - name: Prepare Frontend for Deployment
      working-directory: ./Frontend
      run: |
        Copy-Item package.json dist/
        Copy-Item package-lock.json dist/
        New-Item -Path dist/server.js -ItemType File -Value @'
        const express = require('express');
        const path = require('path');
        const app = express();
        const port = process.env.PORT || 3000;
        
        app.use(express.static(path.join(__dirname)));
        
        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'index.html'));
        });
        
        app.listen(port, () => {
          console.log(`Server running on port ${port}`);
        });
        '@
    
    - name: Install Express for Server
      working-directory: ./Frontend/dist
      run: npm install express --save
      
    - name: Zip Frontend Artifact
      working-directory: ./Frontend
      run: |
        Compress-Archive -Path dist/* -DestinationPath frontend-deploy.zip -Force
      
    - name: Azure CLI Login
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az login --service-principal -u ${{ secrets.AZURE_APP_ID }} -p ${{ secrets.AZURE_PASSWORD }} --tenant ${{ secrets.AZURE_TENANT_ID }}
          az account set --subscription ${{ env.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        package: ./Frontend/frontend-deploy.zip
        
    - name: Logout from Azure
      run: az logout
      if: always() 